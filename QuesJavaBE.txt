1. vòng while, do while , for khi nào dùng sẽ hợp lý với từng loại
2. phân biết static và non-static. khi nào dùng loại nào

- static: Khi muốn lấy thuộc tính trong class, ta phải khởi tạo một đối tượng của class đó. Nhưng trong trường hợp không muốn khởi tạo hoặc dùng chung biến đó thì ta sẽ thêm từ khóa static vào trước kiểu dữ liệu của biến (private static int a = 10;). 
- non-static: Nếu không dùng static, mỗi lần muốn lấy giá trị thì ra phải khởi tạo một đối tượng mới (Person per = new Person(); per.getName();)

3. constructor và hàm khác nhau gì.

Constructor	Phương thức
Constructor được sử dụng để khởi tạo trạng thái của một đối tượng.	Phương thức được sử dụng để thể hiện hành động của một đối tượng.
Constructor không có kiểu trả về.	Phương thức có kiểu trả về.
Constructor được gọi ngầm.	Phương thức được gọi tường minh.
Trình biên dịch Java tạo ra constructor mặc định nếu bạn không có constructor nào.	Phương thức được gọi tường minh.
Tên của constructor phải giống tên lớp.	Phương thức được gọi tường minh.


4. list, set, map khác nhau gì

-	List quan trọng thứ tự, không phân biệt giá trị trùng.
-	Set không quan trọng thứ tự, giá trị không được phép trùng.
-	Map được lưu dưới dạng một cặp key, value. Giá trị của key có thể null.

5. lọc danh sách bị trùng

- Dùng vòng lặp check các phần tử bị trùng.
- Dùng ArrayList kết hợp với Set để loại bỏi phần tử bị trùng. (dùng hashcode va equals)
 
6. equals và ==

- Phương thức equals() được dùng để so sánh hai đối tượng(So sánh các thuộc tính của lớp).
- “==” so sánh hai giá trị (So sánh các tham chiếu hay địa chỉ bộ nhớ).

7. sql constraint tác dụng gì: ràng buộc dữ liệu nhập vào ,
 sql constraint và join có ảnh hường ko? Không

8. jdbc transaction giúp tác dụng gì

- Đảm bảo tính toàn vẹn của dữ liệu.
- Đảm bảo các câu lệnh SQL cùng thực thi hoặc cùng thất bại rollback dữ liệu lại từ đầu trước khi chạy.

9. comparable va comparator (Sắp xếp).

- Comparable: 
•	Khi dùng thì trong class phải implement, đồng thời phải Override lại hàm compareTo trong class.
•	compareTo trả về 3 giá trị: 1, -1 và 0.
- Comparator:
•	Không cần implement.
•	Có thể sử dụng ngoài class, trong tương lai sẽ không ảnh hưởng đến class.
•	 

10. wrapter class và primary type khác nhau thê nào, mục đích sử dụng.
- wrapper dùng cho collection như list, set, map
- wrapper là class

11. Ý nghĩa đa hình và một ví dụ cụ thể

- Một phương thức được thể hiện trên nhiều đối tượng khác nhau.

12. interface và abstract sử dụng khi nào. (Abstract class thì không new được)

- Interface là tập hợp các phương thức trừu tượng.
- Lớp abstract là lớp trìu tượng, nó bao gồm các phương thức abstract.
- Lớp trừu tượng không khởi tạo được đối tượng.

13. anonymous khác class bình thường ra sao. và khi nào nên dùng.

- anonymous class là lớp mang tính chất kế thừa từ class cha và không có tên cụ thể.
- anonymous class được dùng khi muốn Override một phương thức nào đó của class cha.

14. Đồng bộ thread là thế nào, khi nào cần đồng bộ.

- Là có nhiều thread cùng sử dụng chung một đối tượng và các phương thức trong đối tượng đó được thực hiện một cách tuần tự.
- Ví dụ: Trong đối tượng lại có một hàm, khi hàm đó thực thi thì sẽ cho kết quả không mong muốn.

15. cách dùng exception bắt lỗi ngoại lệ khác gì so với if else.
- Exception Bắt đc các lỗi run time , try catch hoạc throws

------------- JAVA WEB -------------

16. session vs cookies:

17. quy trình bảo mật làm như nào trong java servlet. (xác thực và phân quyền)

- Dùng anotation @WebFilter.
- Xác thực và phân quyền trong servlet sẽ dùng thông qua Filter interface.
- destroy(), doFilter(), init().

- Quy hoạch đường dẫn trước khi làm.
- Check điều kiện, nếu đúng thì cho đi tiếp (doFilter()).

18. nếu muốn chặn ip blacklist trong servlet thì làm ra sao.
19. mô hình MVC trong servlet.

- SPRING FRAMEWORK

20. Cách giới hạn tài khoản đăng nhập = session
21. Spring MVC , DI, IoC, Bean

- Bean là các đối tượng được khởi tạo từ class đươc quản lý bởi spring container 
- DI là gán giá trị của Bean vào biến. (Autowire)
- IoC là khái niệm dùng để chỉ việc Spring Container quản lý các bean, và DI khi dùng bean đó trong ứng dụng.

22. Cách sử dụng JPA hibernate làm việc trong project
23. Cách làm để check một lỗi duplicate

- Dùng exception handler

24. Cách kiểm tra bảo mật cho 1 sản phẩm, ko để người khác sửa của nhau.
25. REST là gì. Cách triển khai viết REST API trong spring.

- Là một dạng chuyển đổi cấu trúc dữ liệu để viết API.
- Quy hoạch đường dẫn các end-point.
- Quy định các phương thức HTTP của Rest như GET, POST, PUT,…

26. Tìm hiểu qua về JWT Token access.
27. Phân biệt LAZY và EAGER.

Ví dụ: Có 2 bảng Company và Employee (1 Company có nhiều Employee).
fetch = FetchType.LAZY: Khi find, select đối tượng Company từ database thì nó sẽ không lấy các đối tượng Employee liên quan.
fetch = FetchType.EAGER: Khi find, select đối tượng Company từ database thì tất cả các đối tượng Employee liên quan sẽ được lấy ra và lưu vào listEmployee. 

---- NÂNG CAO CÓ KINH NGHIỆM ----
- Lợi ích của Spring boot ?
- IOC DI là gì 
- Microservices trong hệ thống giao tiếp với nhau ntn ?
- Exception chung của hệ thống xử lí ra sao ?
- Custom 1 cái annotation bao giờ chưa ? Để làm gì ?
- Spring batch ?
- AOP ?
- Thread trong java ? 
- Message Broker: Kafka, RabbitMQ ?
- Tối ưu câu Query bằng những cách nào ?
- Lợi ích của việc đánh và ko đánh index ?
- Desgin pattern đã dùng ?

Bai quiz: https://github.com/dinhduccuong/class-spring08/blob/master/Test_Backend2021.pdf